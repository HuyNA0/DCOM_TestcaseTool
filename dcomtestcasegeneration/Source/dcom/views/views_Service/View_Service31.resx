<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>